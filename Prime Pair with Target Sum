class Solution {
  public:
      vector<bool> sieve(int n) {
        vector<bool> isPrime(n + 1, true);
        isPrime[0] = isPrime[1] = false;
        for (int i = 2; i*i <= n; i++) {
            if (isPrime[i]) {
                for (int j = i * i; j <= n; j+=i) {
                    isPrime[j] = false;
                }
            }
        }
        return isPrime;
    }
    vector<int> getPrimes(int n) {
        vector<bool> isPrime = sieve(n);
        for (int i = 2; i <= n / 2; i++) {
            if (isPrime[i] && isPrime[n - i]) {
                return {i, n - i};
            }
        }
        return {-1,-1};
    }
};
